View(df)
data <- df |>
filter(status=="Dead")
View(data)
data <- df |>
filter(status=="Dead") |>
filter(borough%in%c("Manhattan","Bronx"))
View(data)
data <- df |>
filter(status=="Dead") |>
filter(borough%in%c("Manhattan","Bronx")) |>
group_by(nta_name) |>
summarize(count=n())
View(data)
dataD <- df |>
filter(status=="Dead") |>
filter(borough%in%c("Manhattan","Bronx")) |>
group_by(nta_name) |>
summarize(count=n())
library(tidyverse)
df <- read_csv("/Users/nc7172/Downloads/2015_Street_Tree_Census_-_Tree_Data_20240718.csv")
dataD <- df |>
filter(status=="Dead") |>
filter(borough%in%c("Manhattan","Bronx")) |>
group_by(nta_name) |>
summarize(count=n())
dataA <- df |>
filter(status=="Alive") |>
filter(borough%in%c("Manhattan","Bronx")) |>
group_by(nta_name) |>
summarize(count=n())
View(dataD)
View(dataA)
data <- df |>
filter(borough%in%c("Manhattan","Bronx")) |>
group_by(nta_name) |>
summarize(count=n(),
countAlive = count("Dead"))
data <- df |>
filter(borough%in%c("Manhattan","Bronx")) |>
group_by(nta_name) |>
summarize(count=n(),
countAlive = sum(status=="Dead"))
View(data)
data <- df |>
filter(borough%in%c("Manhattan","Bronx")) |>
group_by(nta_name) |>
summarize(count=n(),
countAlive = sum(status=="Alive"),
countDead = sum(status=="Dead"))
data <- df |>
filter(borough%in%c("Manhattan","Bronx")) |>
group_by(nta_name) |>
summarize(count=n(),
countAlive = count(status=="Alive"),
countDead = sum(status=="Dead"))
data <- df |>
filter(borough%in%c("Manhattan","Bronx")) |>
group_by(nta_name) |>
summarize(count=n(),
countAlive = num(status=="Alive"),
countDead = sum(status=="Dead"))
data <- df |>
filter(borough%in%c("Manhattan","Bronx")) |>
group_by(nta_name) |>
summarize(count=n(),
countAlive = sum(status=="Alive"),
countDead = sum(status=="Dead"))
library(tidyverse)
df <- read_csv("/Users/nc7172/Downloads/2015_Street_Tree_Census_-_Tree_Data_20240718.csv")
data <- df |>
filter(borough%in%c("Manhattan","Bronx")) |>
group_by(nta_name) |>
summarize(count=n(),
countAlive = sum(status=="Alive"),
countDead = sum(status=="Dead"))
View(data)
data <- df |>
filter(borough%in%c("Manhattan","Bronx")) |>
group_by(nta_name) |>
summarize(count=n(),
countAlive = sum(status=="Alive"),
countDead = sum(status=="Dead"),
percentDead = countDead/count)
View(df)
library(dplyr)
#data from https://en.wikipedia.org/wiki/Race_and_ethnicity_in_New_York_City
df <- data.frame(race=c('White', 'Black', 'Asian', 'Other','Mixed'),
racial_compostion=c(29.9,35.6,3.0,25.7,5.8))
df |>
arrange(-racial_composion)
df |>
arrange(-racial_compostion)
df |>
arrange(-racial_compostion) |>
gt()
library(gt)
install.packages('gt')
library(gt)
df |>
arrange(-racial_compostion) |>
gt()
df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition",race="Race")
df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition",race="Race") |>
cols_align("center")
df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition",race="Race") |>
cols_align("center") |>
tab_source_note("Data: Wikipedia")
df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition (%)",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
/
df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition (%)",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census")
df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition (%)",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
tab_style(style=cell_text(size="bigger",weight="bold",transform="uppercase"))
df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition (%)",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
tab_style(style=cell_text(size="bigger",weight="bold",transform="uppercase"), location = cells_title(groups="title"))
df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition (%)",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
tab_style(style=cell_text(size="bigger",weight="bold",transform="uppercase"),
location = cells_title(groups="title")) |>
fmt_percent(
columns = racial_compostion,
decimals = 1
)
df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition (%)",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
tab_style(style=cell_text(size="bigger",weight="bold",transform="uppercase"),
location = cells_title(groups="title")) |>
fmt_percent(
columns = racial_compostion
)
df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition (%)",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
tab_style(style=cell_text(size="bigger",weight="bold",transform="uppercase"),
location = cells_title(groups="title")) |>
fmt_percent(
columns = racial_compostion,
decimals=1
)
df <- data.frame(race=c('White', 'Black', 'Asian', 'Other','Mixed'),
racial_compostion=c(.299,.356,.030,.257,.058))
df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition (%)",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
tab_style(style=cell_text(size="bigger",weight="bold",transform="uppercase"),
location = cells_title(groups="title")) |>
fmt_percent(
columns = racial_compostion,
decimals=1
)
df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
tab_style(style=cell_text(size="bigger",weight="bold",transform="uppercase"),
location = cells_title(groups="title")) |>
fmt_percent(
columns = racial_compostion,
decimals=1
)
library(dplyr)
library(gt)
#data from https://en.wikipedia.org/wiki/Race_and_ethnicity_in_New_York_City
df <- data.frame(race=c('White', 'Black', 'Asian', 'Other','Mixed'),
racial_compostion=c(.299,.356,.030,.257,.058))
table <- df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
tab_style(style=cell_text(size="bigger",weight="bold",transform="uppercase"),
location = cells_title(groups="title")) |>
fmt_percent(
columns = racial_compostion,
decimals=1
)
print(table)
print(table)
gtsave(table,"demographics.png",path="/Users/nc7172/Documents/GitHub/blender_gis_nyc_trees/video files")
?tab_style
location = cells_title(groups=c("title","cells_column_labels")) |>
)
)
table <- df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
tab_style(style=cell_text(size="bigger",weight="bold",transform="uppercase"),
location = cells_title(groups=c("title","cells_column_labels"))) |>
fmt_percent(
columns = racial_compostion,
decimals=1
)
print(table)
table <- df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
tab_style(style=cell_text(size="bigger",weight="bold",transform="uppercase"),
location = cells_title(groups=c("title",cells_column_labels()))) |>
fmt_percent(
columns = racial_compostion,
decimals=1
)
table <- df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
tab_style(style=cell_text(size="bigger",weight="bold",transform="uppercase"),
location = cells_title(groups=c(cells_column_labels()))) |>
fmt_percent(
columns = racial_compostion,
decimals=1
)
table <- df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
tab_style(style=cell_text(size="bigger",weight="bold",transform="uppercase"),
location = cells_title()) |>
fmt_percent(
columns = racial_compostion,
decimals=1
)
print(table)
table <- df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
tab_style(style=cell_text(size="bigger",weight="bold",transform="uppercase"),
location = c(cells_title(groups="title")),cells_column_labels()) |>
fmt_percent(
columns = racial_compostion,
decimals=1
)
print(table)
table <- df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
tab_style(style=cell_text(size="bigger",weight="bold",transform="uppercase"),
location = c(cells_title(groups="title"),cells_column_labels())) |>
fmt_percent(
columns = racial_compostion,
decimals=1
)
table <- df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
tab_style(style=cell_text(size="bigger",weight="bold",transform="uppercase"),
location = c(cells_title(groups="title"),cells_column_labels())) |>
fmt_percent(
columns = racial_compostion,
decimals=1
)
print(table)
table <- df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
tab_style(style=cell_text(size="bigger",weight="bold",transform="uppercase"),
location = cells_title(groups="title")) |>
fmt_percent(
columns = racial_compostion,
decimals=1
)
print(table)
table <- df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
tab_style(style=cell_text(size="bigger",weight="bold",transform="uppercase"),
location = cells_title(groups="title")) |>
tab_style(style=cell_fill(color"lightyellow"),
table <- df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
tab_style(style=cell_text(size="bigger",weight="bold",transform="uppercase"),
location = cells_title(groups="title")) |>
tab_style(style=list(cell_fill(color"lightyellow")),
table <- df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
tab_style(style=cell_text(size="bigger",weight="bold",transform="uppercase"),
location = cells_title(groups="title")) |>
tab_style(style=cell_fill(color"lightyellow"),
table <- df |>
arrange(-racial_compostion) |>
gt() |>
opt_align_table_header('center') |>
opt_table_font(font=list(google_font(name="Helvetica"))) |>
cols_label(racial_compostion="Racial Composition",race="Race") |>
cols_align("center") |>
tab_header(title="Racial Composition in the Bronx", subtitle="2000 Census") |>
tab_style(style=cell_text(size="bigger",weight="bold",transform="uppercase"),
location = cells_title(groups="title")) |>
tab_style(style=cell_fill(color="lightyellow"),
location = cells_body(rows= race=="Black")) |>
fmt_percent(
columns = racial_compostion,
decimals=1
)
print(table)
gtsave(table,"demographics.png",path="/Users/nc7172/Documents/GitHub/blender_gis_nyc_trees/video files")
library(gganimate)
library(ggplot2)
library(dplyr)
library(hash)
covid <- readxl::read_excel("covid.xlsx")
setwd("~/Documents/GitHub/animations/advanced_animations/line")
library(gganimate)
library(ggplot2)
library(dplyr)
library(hash)
covid <- readxl::read_excel("covid.xlsx")
covid$date <- as.Date(covid$date)
world <- covid |>
filter(location=="World") |>
filter(!is.na(total_cases)) |>
filter(date < "2023-01-01") |>
select(date, new_deaths_smoothed)
annotations <- data.frame(keys=list(), values=list())
annotations <- data.frame(keys='First U.S. Death', values='2020-02-06')
annotations <- add_row(annotations, keys='CDC Mask Recommendation', values='2020-04-03')
annotations <- add_row(annotations, keys='Vaccines Released in the U.S.', values='2020-12-14')
annotations <- add_row(annotations, keys='FDA Authorizes Booster Shots', values='2021-11-19')
annotations <- add_row(annotations, keys='WHO Declares Omnicron Variant of Concern', values='2021-11-26')
bullet_effect <- function(dates_to_slow, strength){
world$show_time = case_when(world$date %in% dates_to_slow ~ strength, TRUE~1)
world$reveal_time = cumsum(world$show_time)
return(world)
}
world <- bullet_effect(annotations$values, 100)
ylimit <- 15000
find_y_value <- function(data_value, y_lim, index){
if(index %% 2 == 1){
y_value = ifelse(data_value + y_lim/5 < y_lim, data_value + y_lim/5, data_value - y_lim/5)
}
else{
y_value = ifelse(data_value - y_lim/5 > 1000, data_value - y_lim/5, data_value + y_lim/5)
}
return(y_value)
}
plot_text_annotation <- function(){
text_list <- geom_label(y=0,x=0,label="")
for(i in 1:length(annotations$values)){
y_value <- find_y_value(world$new_deaths_smoothed[world$date==as.Date(annotations$values[i])], ylimit, i)
text_list <- c(text_list,geom_label(label=as.character(annotations$keys[i]),
color=scales::alpha('black',ifelse(world$date>=as.Date(annotations$values[i]), 1, 0)),
x=as.Date(annotations$values[i]),
y=y_value,
fill = alpha(c("white"),ifelse(world$date>=as.Date(annotations$values[i]), 1, 0))))
}
return(text_list)
}
plot_segment_annotation <- function(){
segment_list <- geom_segment(y=0,x=0,xend=0,yend=0)
for(i in 1:length(annotations$values)){
y_value <- find_y_value(world$new_deaths_smoothed[world$date==as.Date(annotations$values[i])], ylimit, i)
segment_list <- c(segment_list, geom_segment(xend=as.Date(annotations$values[i]),
yend=world$new_deaths_smoothed[world$date==as.Date(annotations$values[i])],
x=as.Date(annotations$values[i]),y=y_value,
alpha=ifelse(world$date>=as.Date(annotations$values[i]), 1, 0),
linetype="dashed"))
}
return(segment_list)
}
animation <- world |>
ggplot(aes(x=date, y=new_deaths_smoothed))+
theme_minimal()+
labs(title="New COVID-19 Worldwide Deaths",
subtitle="{world$date[min(which(world$reveal_time >= floor(frame_along)))]}",
caption="Nikhil Chinchalkar for Princeton University | OurWorldInData | 2024")+
xlab('Date')+
ylab('New Deaths Per Week')+
theme(plot.title = ggtext::element_markdown(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = ggtext::element_markdown(size = 10, hjust =0.5, face = "bold"),
axis.text.x=element_text(size=10))+
ylim(0,ylimit)+
plot_segment_annotation()+
geom_line()+
plot_text_annotation()+
scale_alpha(guide='none')+
transition_reveal(reveal_time)
animate(animation, fps = 15, duration = 30, end_pause=75, height = 7,
width = 9, units = "in", res = 200)
world |>
ggplot(aes(x=date, y=new_deaths_smoothed))+
ylim(0,ylimit)+
plot_segment_annotation()+
geom_line()+
plot_text_annotation()+
transition_reveal(reveal_time)
