filter(lon < -65 & lon > -135) |>
filter(lat > 23 & lat < 50) |>
group_by(icao24) |> #time
arrange(desc(icao24)) |>
slice_head(n=1) |>
mutate(lon2 = lon - velocity*cos(heading * pi/180)/50) |>
mutate(lat2 = lat - velocity*sin(heading * pi/180)/50)
hour_log$geom = sprintf("LINESTRING(%a %a, %s %s)", hour_log$lon, hour_log$lat, hour_log$lon2, hour_log$lat2)
#hour_log = st_as_sf(hour_log, wkt = "geom")
}
hourly_flights <- read_hourly_data(0)
read_hourly_data <- function(hour) {
hour_log <- read_csv(sprintf("flight_hours/states_2022-06-27-%02d.csv/states_2022-06-27-%02d.csv", hour, hour),
show_col_types = FALSE)
hour_log$time <- as_datetime(hour_log$time)
hour_log$time <- floor_date(hour_log$time, "hour")
hour_log <-  hour_log |>
filter(!onground) |>
filter(!is.na(lat)) |>
filter(!is.na(lon)) |>
filter(lon < -65 & lon > -135) |>
filter(lat > 23 & lat < 50) |>
group_by(icao24) |> #time
arrange(desc(icao24)) |>
slice_head(n=1) |>
mutate(lon2 = lon - velocity*cos(heading * pi/180)/50) |>
mutate(lat2 = lat - velocity*sin(heading * pi/180)/50)
hour_log$geom = sprintf("LINESTRING(%s %s, %s %s)", hour_log$lon, hour_log$lat, hour_log$lon2, hour_log$lat2)
#hour_log = st_as_sf(hour_log, wkt = "geom")
}
hourly_flights <- read_hourly_data(0)
read_hourly_data <- function(hour) {
hour_log <- read_csv(sprintf("flight_hours/states_2022-06-27-%02d.csv/states_2022-06-27-%02d.csv", hour, hour),
show_col_types = FALSE)
hour_log$time <- as_datetime(hour_log$time)
hour_log$time <- floor_date(hour_log$time, "hour")
hour_log <-  hour_log |>
filter(!onground) |>
filter(!is.na(lat)) |>
filter(!is.na(lon)) |>
filter(lon < -65 & lon > -135) |>
filter(lat > 23 & lat < 50) |>
group_by(icao24) |> #time
arrange(desc(icao24)) |>
slice_head(n=1) |>
mutate(lon2 = lon - velocity*cos(heading * pi/180)/50) |>
mutate(lat2 = lat - velocity*sin(heading * pi/180)/50)
hour_log$geom = sprintf("LINESTRING(%s %s, %s %s)", hour_log$lon, hour_log$lat, hour_log$lon2, hour_log$lat2)
hour_log = st_as_sf(hour_log, wkt = "geom")
}
hourly_flights <- read_hourly_data(0)
?round
read_hourly_data <- function(hour) {
hour_log <- read_csv(sprintf("flight_hours/states_2022-06-27-%02d.csv/states_2022-06-27-%02d.csv", hour, hour),
show_col_types = FALSE)
hour_log$time <- as_datetime(hour_log$time)
hour_log$time <- floor_date(hour_log$time, "hour")
hour_log <-  hour_log |>
filter(!onground) |>
filter(!is.na(lat)) |>
filter(!is.na(lon)) |>
filter(lon < -65 & lon > -135) |>
filter(lat > 23 & lat < 50) |>
group_by(icao24) |> #time
arrange(desc(icao24)) |>
slice_head(n=1) |>
mutate(lon2 = round(lon - velocity*cos(heading * pi/180)/50, 5)) |>
mutate(lat2 = round(lat - velocity*sin(heading * pi/180)/50, 5))
hour_log$geom = sprintf("LINESTRING(%s %s, %s %s)", hour_log$lon, hour_log$lat, hour_log$lon2, hour_log$lat2)
hour_log = st_as_sf(hour_log, wkt = "geom")
}
hourly_flights <- read_hourly_data(0)
read_hourly_data <- function(hour) {
hour_log <- read_csv(sprintf("flight_hours/states_2022-06-27-%02d.csv/states_2022-06-27-%02d.csv", hour, hour),
show_col_types = FALSE)
hour_log$time <- as_datetime(hour_log$time)
hour_log$time <- floor_date(hour_log$time, "hour")
hour_log <-  hour_log |>
filter(!onground) |>
filter(!is.na(lat)) |>
filter(!is.na(lon)) |>
filter(lon < -65 & lon > -135) |>
filter(lat > 23 & lat < 50) |>
group_by(icao24) |> #time
arrange(desc(icao24)) |>
slice_head(n=1) |>
mutate(lon2 = round(lon - velocity*cos(heading * pi/180)/50, 5)) |>
mutate(lat2 = round(lat - velocity*sin(heading * pi/180)/50, 5))
hour_log$geom = sprintf("LINESTRING(%s %s, %s %s)", hour_log$lon, hour_log$lat, hour_log$lon2, hour_log$lat2)
#hour_log = st_as_sf(hour_log, wkt = "geom")
}
hourly_flights <- read_hourly_data(0)
read_hourly_data <- function(hour) {
hour_log <- read_csv(sprintf("flight_hours/states_2022-06-27-%02d.csv/states_2022-06-27-%02d.csv", hour, hour),
show_col_types = FALSE)
hour_log$time <- as_datetime(hour_log$time)
hour_log$time <- floor_date(hour_log$time, "hour")
hour_log <-  hour_log |>
filter(!onground) |>
filter(!is.na(lat)) |>
filter(!is.na(lon)) |>
filter(lon < -65 & lon > -135) |>
filter(lat > 23 & lat < 50) |>
group_by(icao24) |> #time
arrange(desc(icao24)) |>
slice_head(n=1) |>
mutate(lon2 = round(lon - velocity*cos(heading * pi/180)/50, 5)) |>
mutate(lat2 = round(lat - velocity*sin(heading * pi/180)/50, 5))
#hour_log$geom = sprintf("LINESTRING(%s %s, %s %s)", hour_log$lon, hour_log$lat, hour_log$lon2, hour_log$lat2)
#hour_log = st_as_sf(hour_log, wkt = "geom")
}
hourly_flights <- read_hourly_data(0)
df = data.frame(id = c("a", "b"), lon1 = c(lat - .5*sin(.5 * pi/180)/50,2), lat1 = c(3,4), lon2 = c(5,6), lat2 = c(7,8))
df = data.frame(id = c("a", "b"), lon1 = c(100 - .5*sin(.5 * pi/180)/50,2), lat1 = c(3,4), lon2 = c(5,6), lat2 = c(7,8))
df$geom = sprintf("LINESTRING(%s %s, %s %s)", df$lon1, df$lat1, df$lon2, df$lat2)
df = st_as_sf(df, wkt = "geom")
read_hourly_data <- function(hour) {
hour_log <- read_csv(sprintf("flight_hours/states_2022-06-27-%02d.csv/states_2022-06-27-%02d.csv", hour, hour),
show_col_types = FALSE)
hour_log$time <- as_datetime(hour_log$time)
hour_log$time <- floor_date(hour_log$time, "hour")
hour_log <-  hour_log |>
filter(!onground) |>
filter(!is.na(lat)) |>
filter(!is.na(lon)) |>
filter(lon < -65 & lon > -135) |>
filter(lat > 23 & lat < 50) |>
group_by(icao24) |> #time
arrange(desc(icao24)) |>
slice_head(n=1) |>
mutate(lon2 = lon - velocity*cos(heading * pi/180)/50) |>
mutate(lat2 = lat - velocity*sin(heading * pi/180)/50) |>
mutate(geom = sprintf("LINESTRING(%s %s, %s %s)", lon, lat, lon2, lat2)) |>
st_as_sf(wkt = "geom")
}
hourly_flights <- read_hourly_data(0)
View(hourly_flights)
read_hourly_data <- function(hour) {
hour_log <- read_csv(sprintf("flight_hours/states_2022-06-27-%02d.csv/states_2022-06-27-%02d.csv", hour, hour),
show_col_types = FALSE)
hour_log$time <- as_datetime(hour_log$time)
hour_log$time <- floor_date(hour_log$time, "hour")
hour_log <-  hour_log |>
filter(!onground) |>
filter(!is.na(lat)) |>
filter(!is.na(lon)) |>
filter(lon < -65 & lon > -135) |>
filter(lat > 23 & lat < 50) |>
group_by(icao24) |> #time
arrange(desc(icao24)) |>
slice_head(n=1) |>
mutate(lon2 = lon - velocity*cos(heading * pi/180)/50) |>
mutate(lat2 = lat - velocity*sin(heading * pi/180)/50) |>
mutate(geom = sprintf("LINESTRING(%s %s, %s %s)", lon, lat, lon2, lat2)) |>
st_as_sf(wkt = "geom")
}
hourly_flights <- read_hourly_data(0)
read_hourly_data <- function(hour) {
hour_log <- read_csv(sprintf("flight_hours/states_2022-06-27-%02d.csv/states_2022-06-27-%02d.csv", hour, hour),
show_col_types = FALSE)
hour_log$time <- as_datetime(hour_log$time)
hour_log$time <- floor_date(hour_log$time, "hour")
hour_log <-  hour_log |>
filter(!onground) |>
filter(!is.na(lat)) |>
filter(!is.na(lon)) |>
filter(lon < -65 & lon > -135) |>
filter(lat > 23 & lat < 50) |>
group_by(icao24) |> #time
arrange(desc(icao24)) |>
slice_head(n=1) |>
mutate(lon2 = lon - velocity*cos(heading * pi/180)/50) |>
mutate(lat2 = lat - velocity*sin(heading * pi/180)/50) |>
mutate(geom = sprintf("LINESTRING(%s %s, %s %s)", lon, lat, lon2, lat2))
#|>
#  st_as_sf(wkt = "geom")
}
hourly_flights <- read_hourly_data(0)
df = data.frame(id = c("a", "b"), lon1 = c(100 - .5*sin(.5 * pi/180)/50,2), lat1 = c(3,4), lon2 = c(5,6), lat2 = c(7,8))
df$geom = sprintf("LINESTRING(%s %s, %s %s)", df$lon1, df$lat1, df$lon2, df$lat2)
df = st_as_sf(df, wkt = "geom")
hour_log <-  hour_log |>
filter(!onground) |>
filter(!is.na(lat)) |>
filter(!is.na(lon)) |>
filter(lon < -65 & lon > -135) |>
filter(lat > 23 & lat < 50) |>
group_by(icao24) |> #time
arrange(desc(icao24)) |>
slice_head(n=1) |>
mutate(lon2 = lon - velocity*cos(heading * pi/180)/50) |>
mutate(lat2 = lat - velocity*sin(heading * pi/180)/50) |>
mutate(geom = sprintf("LINESTRING(%s %s, %s %s)", round(lon,4), lat, lon2, lat2))
read_hourly_data <- function(hour) {
hour_log <- read_csv(sprintf("flight_hours/states_2022-06-27-%02d.csv/states_2022-06-27-%02d.csv", hour, hour),
show_col_types = FALSE)
hour_log$time <- as_datetime(hour_log$time)
hour_log$time <- floor_date(hour_log$time, "hour")
hour_log <-  hour_log |>
filter(!onground) |>
filter(!is.na(lat)) |>
filter(!is.na(lon)) |>
filter(lon < -65 & lon > -135) |>
filter(lat > 23 & lat < 50) |>
group_by(icao24) |> #time
arrange(desc(icao24)) |>
slice_head(n=1) |>
mutate(lon2 = lon - velocity*cos(heading * pi/180)/50) |>
mutate(lat2 = lat - velocity*sin(heading * pi/180)/50) |>
mutate(geom = sprintf("LINESTRING(%s %s, %s %s)", round(lon,4), lat, lon2, lat2))
#|>
#  st_as_sf(wkt = "geom")
}
hourly_flights <- read_hourly_data(0)
read_hourly_data <- function(hour) {
hour_log <- read_csv(sprintf("flight_hours/states_2022-06-27-%02d.csv/states_2022-06-27-%02d.csv", hour, hour),
show_col_types = FALSE)
hour_log$time <- as_datetime(hour_log$time)
hour_log$time <- floor_date(hour_log$time, "hour")
hour_log <-  hour_log |>
filter(!onground) |>
filter(!is.na(lat)) |>
filter(!is.na(lon)) |>
filter(lon < -65 & lon > -135) |>
filter(lat > 23 & lat < 50) |>
group_by(icao24) |> #time
arrange(desc(icao24)) |>
slice_head(n=1) |>
mutate(lon2 = lon - velocity*cos(heading * pi/180)/50) |>
mutate(lat2 = lat - velocity*sin(heading * pi/180)/50) |>
mutate(geom = sprintf("LINESTRING(%s %s, %s %s)", round(lon,4), round(lat,4), round(lon2,4), round(lat2,4)))
#|>
#  st_as_sf(wkt = "geom")
}
hourly_flights <- read_hourly_data(0)
read_hourly_data <- function(hour) {
hour_log <- read_csv(sprintf("flight_hours/states_2022-06-27-%02d.csv/states_2022-06-27-%02d.csv", hour, hour),
show_col_types = FALSE)
hour_log$time <- as_datetime(hour_log$time)
hour_log$time <- floor_date(hour_log$time, "hour")
hour_log <-  hour_log |>
filter(!onground) |>
filter(!is.na(lat)) |>
filter(!is.na(lon)) |>
filter(lon < -65 & lon > -135) |>
filter(lat > 23 & lat < 50) |>
group_by(icao24) |> #time
arrange(desc(icao24)) |>
slice_head(n=1) |>
mutate(lon2 = lon - velocity*cos(heading * pi/180)/50) |>
mutate(lat2 = lat - velocity*sin(heading * pi/180)/50) |>
mutate(geom = sprintf("LINESTRING(%s %s, %s %s)", round(lon,4), round(lat,4), round(lon2,4), round(lat2,4))) |>
st_as_sf(wkt = "geom")
}
hourly_flights <- read_hourly_data(0)
read_hourly_data <- function(hour) {
hour_log <- read_csv(sprintf("flight_hours/states_2022-06-27-%02d.csv/states_2022-06-27-%02d.csv", hour, hour),
show_col_types = FALSE)
hour_log$time <- as_datetime(hour_log$time)
hour_log$time <- floor_date(hour_log$time, "hour")
hour_log <-  hour_log |>
filter(!onground) |>
filter(!is.na(lat)) |>
filter(!is.na(lon)) |>
filter(lon < -65 & lon > -135) |>
filter(lat > 23 & lat < 50) |>
group_by(icao24) |> #time
arrange(desc(icao24)) |>
slice_head(n=1) |>
mutate(lon2 = lon - velocity*cos(heading * pi/180)/50) |>
mutate(lat2 = lat - velocity*sin(heading * pi/180)/50) |>
mutate(geom = sprintf("LINESTRING(%f %f, %f %f)", round(lon,4), round(lat,4), round(lon2,4), round(lat2,4))) |>
st_as_sf(wkt = "geom")
}
hourly_flights <- read_hourly_data(0)
read_hourly_data <- function(hour) {
hour_log <- read_csv(sprintf("flight_hours/states_2022-06-27-%02d.csv/states_2022-06-27-%02d.csv", hour, hour),
show_col_types = FALSE)
hour_log$time <- as_datetime(hour_log$time)
hour_log$time <- floor_date(hour_log$time, "hour")
hour_log <-  hour_log |>
filter(!onground) |>
filter(!is.na(lat)) |>
filter(!is.na(lon)) |>
filter(!is.na(velocity)) |>
filter(lon < -65 & lon > -135) |>
filter(lat > 23 & lat < 50) |>
group_by(icao24) |> #time
arrange(desc(icao24)) |>
slice_head(n=1) |>
mutate(lon2 = lon - velocity*cos(heading * pi/180)/50) |>
mutate(lat2 = lat - velocity*sin(heading * pi/180)/50) |>
mutate(geom = sprintf("LINESTRING(%f %f, %f %f)", lon, lat, lon2, lat2)) |>
st_as_sf(wkt = "geom")
}
hourly_flights <- read_hourly_data(0)
hourly_flights <- read_hourly_data(0)
system.time(for(x in 1:23){
hourly_flights <- rbind(hourly_flights, read_hourly_data(x))
print(paste("Read and appended:",x))
})
hourly_flights_AAL <- hourly_flights |>
filter(startsWith(callsign, "AAL")) |>
filter(callsign == "AAL185" | callsign =="AAL341")
usa <- st_as_sf(maps::map("state", fill=TRUE, plot=FALSE))
animation <- ggplot(usa) +
geom_sf(color = "#2b2b2b", fill = "white", size=0.125)+
geom_sf(data=hourly_flights_AAL, size=1, alpha=0.6, aes(group = icao24))+
theme_void()+
labs(title="American Airlines Flights Over A 24-hour Period",
subtitle="{case_when(
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) == 0 ~ \"12:00 AM\",
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) < 12 ~ paste0(as.integer((as.numeric(format(frame_time, \"%H\")))%%24),\":00 AM\"),
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) == 12 ~ \"12:00 PM\",
TRUE ~ paste0(as.integer((as.numeric(format(frame_time, \"%H\")))%%24)%%12,\":00 PM\")
)} EST",
caption="Nikhil Chinchalkar for Princeton University | Open Sky Network | 2024",
color="Significance",
size="Magnitude")+
xlab('')+
ylab('')+
theme(plot.title = element_text(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = element_text(size = 16, hjust =0.5, face = "bold"))+
transition_time(time)+
shadow_wake(alpha=0.5, wake_length = 0.03)+
enter_fade(alpha = 0)+
exit_fade(alpha = 0)
#10, 24, 50
animate(animation, fps=10, duration=10, end_pause = 0, height = 7,
width = 9, units = "in", res = 200)
?st_set_crs
read_hourly_data <- function(hour) {
hour_log <- read_csv(sprintf("flight_hours/states_2022-06-27-%02d.csv/states_2022-06-27-%02d.csv", hour, hour),
show_col_types = FALSE)
hour_log$time <- as_datetime(hour_log$time)
hour_log$time <- floor_date(hour_log$time, "hour")
hour_log <-  hour_log |>
filter(!onground) |>
filter(!is.na(lat)) |>
filter(!is.na(lon)) |>
filter(!is.na(velocity)) |>
filter(lon < -65 & lon > -135) |>
filter(lat > 23 & lat < 50) |>
group_by(icao24) |> #time
arrange(desc(icao24)) |>
slice_head(n=1) |>
mutate(lon2 = lon - velocity*cos(heading * pi/180)/50) |>
mutate(lat2 = lat - velocity*sin(heading * pi/180)/50) |>
mutate(geom = sprintf("LINESTRING(%f %f, %f %f)", lon, lat, lon2, lat2)) |>
st_as_sf(wkt = "geom") |>
st_set_crs(4326)
}
hourly_flights <- read_hourly_data(0)
system.time(for(x in 1:23){
hourly_flights <- rbind(hourly_flights, read_hourly_data(x))
print(paste("Read and appended:",x))
})
hourly_flights_AAL <- hourly_flights |>
filter(startsWith(callsign, "AAL")) |>
filter(callsign == "AAL185" | callsign =="AAL341")
usa <- st_as_sf(maps::map("state", fill=TRUE, plot=FALSE))
animation <- ggplot(usa) +
geom_sf(color = "#2b2b2b", fill = "white", size=0.125)+
geom_sf(data=hourly_flights_AAL, size=1, alpha=0.6, aes(group = icao24))+
theme_void()+
labs(title="American Airlines Flights Over A 24-hour Period",
subtitle="{case_when(
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) == 0 ~ \"12:00 AM\",
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) < 12 ~ paste0(as.integer((as.numeric(format(frame_time, \"%H\")))%%24),\":00 AM\"),
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) == 12 ~ \"12:00 PM\",
TRUE ~ paste0(as.integer((as.numeric(format(frame_time, \"%H\")))%%24)%%12,\":00 PM\")
)} EST",
caption="Nikhil Chinchalkar for Princeton University | Open Sky Network | 2024",
color="Significance",
size="Magnitude")+
xlab('')+
ylab('')+
theme(plot.title = element_text(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = element_text(size = 16, hjust =0.5, face = "bold"))+
transition_time(time)+
shadow_wake(alpha=0.5, wake_length = 0.03)+
enter_fade(alpha = 0)+
exit_fade(alpha = 0)
#10, 24, 50
animate(animation, fps=10, duration=10, end_pause = 0, height = 7,
width = 9, units = "in", res = 200)
View(hourly_flights_AAL)
hourly_flights_AAL <- hourly_flights |>
filter(startsWith(callsign, "AAL")) |>
filter(callsign =="AAL341")
usa <- st_as_sf(maps::map("state", fill=TRUE, plot=FALSE))
animation <- ggplot(usa) +
geom_sf(color = "#2b2b2b", fill = "white", size=0.125)+
geom_sf(data=hourly_flights_AAL, size=1, alpha=0.6, aes(group = icao24))+
theme_void()+
labs(title="American Airlines Flights Over A 24-hour Period",
subtitle="{case_when(
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) == 0 ~ \"12:00 AM\",
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) < 12 ~ paste0(as.integer((as.numeric(format(frame_time, \"%H\")))%%24),\":00 AM\"),
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) == 12 ~ \"12:00 PM\",
TRUE ~ paste0(as.integer((as.numeric(format(frame_time, \"%H\")))%%24)%%12,\":00 PM\")
)} EST",
caption="Nikhil Chinchalkar for Princeton University | Open Sky Network | 2024",
color="Significance",
size="Magnitude")+
xlab('')+
ylab('')+
theme(plot.title = element_text(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = element_text(size = 16, hjust =0.5, face = "bold"))+
transition_time(time)+
shadow_wake(alpha=0.5, wake_length = 0.03)+
enter_fade(alpha = 0)+
exit_fade(alpha = 0)
#10, 24, 50
animate(animation, fps=10, duration=10, end_pause = 0, height = 7,
width = 9, units = "in", res = 200)
animation <- ggplot(usa) +
geom_sf(color = "#2b2b2b", fill = "white", size=0.125)+
geom_sf(data=hourly_flights_AAL, size=1, alpha=0.6, aes(group = icao24))+
theme_void()+
labs(title="American Airlines Flights Over A 24-hour Period",
subtitle="{case_when(
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) == 0 ~ \"12:00 AM\",
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) < 12 ~ paste0(as.integer((as.numeric(format(frame_time, \"%H\")))%%24),\":00 AM\"),
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) == 12 ~ \"12:00 PM\",
TRUE ~ paste0(as.integer((as.numeric(format(frame_time, \"%H\")))%%24)%%12,\":00 PM\")
)} EST",
caption="Nikhil Chinchalkar for Princeton University | Open Sky Network | 2024",
color="Significance",
size="Magnitude")+
xlab('')+
ylab('')+
theme(plot.title = element_text(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = element_text(size = 16, hjust =0.5, face = "bold"))
animation
animation <- ggplot(usa) +
geom_sf(color = "#2b2b2b", fill = "white", size=0.125)+
geom_sf(data=hourly_flights_AAL, size=1, alpha=0.6, aes(group = icao24))+
theme_void()+
labs(title="American Airlines Flights Over A 24-hour Period",
subtitle="{case_when(
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) == 0 ~ \"12:00 AM\",
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) < 12 ~ paste0(as.integer((as.numeric(format(frame_time, \"%H\")))%%24),\":00 AM\"),
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) == 12 ~ \"12:00 PM\",
TRUE ~ paste0(as.integer((as.numeric(format(frame_time, \"%H\")))%%24)%%12,\":00 PM\")
)} EST",
caption="Nikhil Chinchalkar for Princeton University | Open Sky Network | 2024",
color="Significance",
size="Magnitude")+
xlab('')+
ylab('')+
theme(plot.title = element_text(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = element_text(size = 16, hjust =0.5, face = "bold"))
animation
animation <- ggplot(usa) +
geom_sf(color = "#2b2b2b", fill = "white", size=0.125)+
#geom_sf(data=hourly_flights_AAL, size=1, alpha=0.6, aes(group = icao24))+
theme_void()+
labs(title="American Airlines Flights Over A 24-hour Period",
subtitle="{case_when(
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) == 0 ~ \"12:00 AM\",
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) < 12 ~ paste0(as.integer((as.numeric(format(frame_time, \"%H\")))%%24),\":00 AM\"),
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) == 12 ~ \"12:00 PM\",
TRUE ~ paste0(as.integer((as.numeric(format(frame_time, \"%H\")))%%24)%%12,\":00 PM\")
)} EST",
caption="Nikhil Chinchalkar for Princeton University | Open Sky Network | 2024",
color="Significance",
size="Magnitude")+
xlab('')+
ylab('')+
theme(plot.title = element_text(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = element_text(size = 16, hjust =0.5, face = "bold"))
animation
View(animation)
animation <-
ggplot(usa) +
geom_sf(color = "#2b2b2b", fill = "white", size=0.125)+
#geom_sf(data=hourly_flights_AAL, size=1, alpha=0.6, aes(group = icao24))+
theme_void()+
labs(title="American Airlines Flights Over A 24-hour Period",
subtitle="{case_when(
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) == 0 ~ \"12:00 AM\",
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) < 12 ~ paste0(as.integer((as.numeric(format(frame_time, \"%H\")))%%24),\":00 AM\"),
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) == 12 ~ \"12:00 PM\",
TRUE ~ paste0(as.integer((as.numeric(format(frame_time, \"%H\")))%%24)%%12,\":00 PM\")
)} EST",
caption="Nikhil Chinchalkar for Princeton University | Open Sky Network | 2024",
color="Significance",
size="Magnitude")+
xlab('')+
ylab('')+
theme(plot.title = element_text(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = element_text(size = 16, hjust =0.5, face = "bold"))
animation <-
ggplot(usa) +
geom_sf(color = "#2b2b2b", fill = "white", size=0.125)+
#geom_sf(data=hourly_flights_AAL, size=1, alpha=0.6, aes(group = icao24))+
theme_void()+
labs(title="American Airlines Flights Over A 24-hour Period",
subtitle="{case_when(
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) == 0 ~ \"12:00 AM\",
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) < 12 ~ paste0(as.integer((as.numeric(format(frame_time, \"%H\")))%%24),\":00 AM\"),
as.integer((as.numeric(format(frame_time, \"%H\")))%%24) == 12 ~ \"12:00 PM\",
TRUE ~ paste0(as.integer((as.numeric(format(frame_time, \"%H\")))%%24)%%12,\":00 PM\")
)} EST",
caption="Nikhil Chinchalkar for Princeton University | Open Sky Network | 2024",
color="Significance",
size="Magnitude")+
xlab('')+
ylab('')+
theme(plot.title = element_text(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = element_text(size = 16, hjust =0.5, face = "bold"))
