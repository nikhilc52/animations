camera_positions <- data.frame(x = predict(spline_fit_x, x=seq(1,nrow(average_positions), by=nrow(average_positions)/(30*15)))$y)
camera_positions <- camera_positions |>
mutate(y = predict(spline_fit_y, x=seq(1,nrow(average_positions), by=nrow(average_positions)/(30*15)))$y) |>
mutate(z = predict(spline_fit_z, x=seq(1,nrow(average_positions), by=nrow(average_positions)/(30*15)))$y)
###########
generate_surface <- function(file){
raw_tif <- read_stars(paste0("surfaces/", file, ".png"), RasterIO = list(nBufXSize=x_size, nBufYSize=y_size))
rgb <- as.data.frame(raw_tif) |>
tidyr::pivot_wider(names_from = band, values_from = paste0("X",file,".png"))
colnames(rgb)[3] <- "red"
colnames(rgb)[4] <- "green"
colnames(rgb)[5] <- "blue"
rgb$color <- rgb(rgb$red/255,rgb$green/255,rgb$blue/255)
rgb$color_int <- bitwShiftL(rgb$red, 16) + bitwShiftL(rgb$green, 8) + rgb$blue
rgb_earth <<- matrix(data=rgb$color_int, nrow=y_size, ncol = x_size, byrow=TRUE)
earth_colorscale <- distinct(data.frame(rgb$color_int, rgb$color))
earth_colorscale <- earth_colorscale |> arrange(rgb.color_int)
while(nrow(earth_colorscale) > 255){
toDelete <- seq(0, nrow(earth_colorscale), 2)
earth_colorscale <- earth_colorscale[toDelete, ]
rownames(earth_colorscale) = NULL
}
earth_colorscale$breaks <- seq(1:nrow(earth_colorscale))/nrow(earth_colorscale)
earth_colorscale$breaks[1] = 0
earth_colorscale <- earth_colorscale[,c(3,2)]
names(earth_colorscale)[names(earth_colorscale) == 'rgb.color'] <- 'colors'
earth_colorscale <<- earth_colorscale
}
generate_globe <- function(curr_shearwaters, camera_index, dates_index){
globe <<- curr_shearwaters |>
plot_ly(height = 600) |>
add_sf(
data = sf::st_as_sf(maps::map("world", plot = FALSE, fill = TRUE)),
x = ~ 1.001 * cos(degrees2radians(x)) * cos(degrees2radians(y)),
y = ~ 1.001 * sin(degrees2radians(x)) * cos(degrees2radians(y)),
z = ~ 1.001 * sin(degrees2radians(y)),
color = I("black"), size = I(1),
hoverinfo = "none"
) |>
add_trace(
x=~curr_shearwaters$x,
y=~curr_shearwaters$y,
z=~curr_shearwaters$z,
mode = "markers", type = "scatter3d",
marker = list(size = 7),
hoverinfo = "none"
) |>
add_surface(
x = cos(degrees2radians(lon)) * cos(degrees2radians(lat)),
y = sin(degrees2radians(lon)) * cos(degrees2radians(lat)),
z = -sin(degrees2radians(lat)),
surfacecolor = rgb_earth,
colorscale=earth_colorscale,
showscale = FALSE, hoverinfo = "none",
lightposition = list(
x=2,
y=2,
z=2
),
contours = list(
x = list(highlight = FALSE),
y = list(highlight = FALSE),
z = list(highlight = FALSE)
)
) |>
layout(
showlegend = FALSE,
annotations=list(list(text=paste0("Day: ", dates[dates_index], "<br>Nikhil Chinchalkar For Princeton University | Migration and foraging ecology of Greater Shearwater | 2024"),
showarrow=FALSE, font=list(family="Arial", size=28), y=0, bgcolor="white", opacity=0.85),
list(text="<br><b>Greater Shearwater Migration</b>",font=list(family="Arial", size=48), bgcolor="white", opacity=0.85, y=.9)),
scene = list(
xaxis = empty_axis,
yaxis = empty_axis,
zaxis = empty_axis,
aspectratio = list(x = 1, y = 1, z = 1),
camera = list(eye=list(x=camera_positions$x[camera_index]*2,
y=camera_positions$y[camera_index],
z=camera_positions$z[camera_index]))
)
)
}
#install.packages("processx")
dates <- unique(shearwaters_full$Time)
system.time(
for(i in 1:nrow(camera_positions)){
dates_index <- as.integer((i+3) * length(dates)/nrow(camera_positions))
print(paste("Date:",dates[dates_index]))
print(paste("Frame #:", i))
file = formatC(yday(as.Date(dates[dates_index])), width = 3, format = "d", flag = "0")
generate_surface(file)
curr_shearwaters <- shearwaters_full |>
filter(Time == dates[dates_index])
generate_globe(curr_shearwaters, i, dates_index)
orca(globe, paste0("image_sequence/",formatC(i, width = 3, format = "d", flag = "0"),".png"), width = 7*200, height = 7*200)
}
)
system.time(
for(i in 1:nrow(camera_positions)){
dates_index <- as.integer((i+3) * length(dates)/nrow(camera_positions))
print(paste("Date:",dates[dates_index]))
print(paste("Frame #:", i))
file = formatC(yday(as.Date(dates[dates_index])), width = 3, format = "d", flag = "0")
generate_surface(file)
curr_shearwaters <- shearwaters_full |>
filter(Time == dates[dates_index])
generate_globe(curr_shearwaters, i, dates_index)
orca(globe, paste0("image_sequence/",formatC(i, width = 3, format = "d", flag = "0"),".png"), width = 7*200, height = 7*200)
}
)
png_files <- sort(list.files("image_sequence", pattern = "*.png", full.names = TRUE))
for(i in 1:10){
png_files <- append(png_files, png_files[length(png_files)])
}
png_files <- sort(list.files("image_sequence", pattern = "*.png", full.names = TRUE))
for(i in 1:120){
png_files <- append(png_files, png_files[length(png_files)])
}
gifski::gifski(png_files, gif_file = "final.gif", width = 7*200, height = 7*200, delay = 30/length(png_files))
png_files <- sort(list.files("image_sequence", pattern = "*.png", full.names = TRUE))
for(i in 1:120){
png_files <- append(png_files, png_files[length(png_files)])
}
gifski::gifski(png_files, gif_file = "final.gif", width = 7*200, height = 7*200, delay = 30/length(png_files))
View(camera_positions)
View(average_positions)
View(curr_shearwaters)
View(shearwaters_full)
first_appearances <- shearwaters_full |>
group_by(Animal) |>
summarize(
decimalLatitude=first(decimalLatitude),
decimalLongitude=first(decimalLongitude)
)
View(first_appearances)
first_appearances[96794a]
first_appearances$decimalLatitude[96794a]
first_appearances$decimalLatitude["96794a"]
first_appearances["96794a"]
first_appearances[Animal]["96794a"]
first_appearances["Animal"]["96794a"]
first_appearances["Animal"]
clear
first_appearances["Animal"] == "96794a"
first_appearances["Animal",1]
first_appearances["Animal",1]
first_appearances["Animal",10]
first_appearances["Animal"]
shearwaters_full <- left_join(shearwaters_full, first_appearances)
library(plotly)
library(dplyr)
library(stars)
library(tidyr)
library(lubridate)
degrees2radians <- function(degree) degree * pi / 180
shearwaters <- read.csv("occurrence.csv")
shearwaters <- shearwaters[,names(shearwaters) %in% c("organismID", "verbatimEventDate", "decimalLatitude","decimalLongitude")]
shearwaters <- shearwaters |>
separate_rows(organismID, sep=";") |>
mutate(date = as.POSIXct(verbatimEventDate))
shearwaters <- shearwaters |>
mutate(x=1.01 * cos(degrees2radians(decimalLongitude)) * cos(degrees2radians(decimalLatitude))) |>
mutate(y=1.01 * sin(degrees2radians(decimalLongitude)) * cos(degrees2radians(decimalLatitude))) |>
mutate(z=1.01 * sin(degrees2radians(decimalLatitude)))
time_range <- seq(
from = as.Date(min(shearwaters$date)),
to = as.Date(max(shearwaters$date)),
by = "day"
)
animals <- unique(shearwaters$organismID)
full_times <- expand.grid(Animal = animals, Time = time_range)
shearwaters_full <- full_times |>
left_join(shearwaters, by = c("Animal" = "organismID"))|>
group_by(Animal, Time) |>
filter(abs(difftime(Time, date, units = "secs")) == min(abs(difftime(Time, date, units = "secs")))) |>
filter(abs(difftime(Time, date, units = "days")) < 1) |>
ungroup() |>
select(Animal, Time, date, decimalLatitude, decimalLongitude, x, y, z) |>
group_by(Time) |>
filter(n() > 3) |>
filter(Time >= as.Date("2010-01-01"))
shearwaters_full$Time <- as.character(shearwaters_full$Time)
first_appearances <- shearwaters_full |>
group_by(Animal) |>
summarize(
decimalLatitude=first(decimalLatitude),
decimalLongitude=first(decimalLongitude)
)
shearwaters_full <- left_join(shearwaters_full, first_appearances, by=c('Animal','Animal'))
shearwaters_full <- left_join(shearwaters_full, first_appearances, by=join_by('Animal'=='Animal'))
View(shearwaters_full)
first_appearances <- shearwaters_full |>
group_by(Animal) |>
summarize(
firstLat=first(decimalLatitude),
firstLon=first(decimalLongitude)
)
library(plotly)
library(dplyr)
library(stars)
library(tidyr)
library(lubridate)
degrees2radians <- function(degree) degree * pi / 180
shearwaters <- read.csv("occurrence.csv")
shearwaters <- shearwaters[,names(shearwaters) %in% c("organismID", "verbatimEventDate", "decimalLatitude","decimalLongitude")]
shearwaters <- shearwaters |>
separate_rows(organismID, sep=";") |>
mutate(date = as.POSIXct(verbatimEventDate))
shearwaters <- shearwaters |>
mutate(x=1.01 * cos(degrees2radians(decimalLongitude)) * cos(degrees2radians(decimalLatitude))) |>
mutate(y=1.01 * sin(degrees2radians(decimalLongitude)) * cos(degrees2radians(decimalLatitude))) |>
mutate(z=1.01 * sin(degrees2radians(decimalLatitude)))
time_range <- seq(
from = as.Date(min(shearwaters$date)),
to = as.Date(max(shearwaters$date)),
by = "day"
)
animals <- unique(shearwaters$organismID)
full_times <- expand.grid(Animal = animals, Time = time_range)
shearwaters_full <- full_times |>
left_join(shearwaters, by = c("Animal" = "organismID"))|>
group_by(Animal, Time) |>
filter(abs(difftime(Time, date, units = "secs")) == min(abs(difftime(Time, date, units = "secs")))) |>
filter(abs(difftime(Time, date, units = "days")) < 1) |>
ungroup() |>
select(Animal, Time, date, decimalLatitude, decimalLongitude, x, y, z) |>
group_by(Time) |>
filter(n() > 3) |>
filter(Time >= as.Date("2010-01-01"))
shearwaters_full$Time <- as.character(shearwaters_full$Time)
first_appearances <- shearwaters_full |>
group_by(Animal) |>
summarize(
firstLat=first(decimalLatitude),
firstLon=first(decimalLongitude)
)
shearwaters_full <- left_join(shearwaters_full, first_appearances, by=join_by('Animal'=='Animal'))
library(plotly)
library(dplyr)
library(stars)
library(tidyr)
library(lubridate)
degrees2radians <- function(degree) degree * pi / 180
shearwaters <- read.csv("occurrence.csv")
shearwaters <- shearwaters[,names(shearwaters) %in% c("organismID", "verbatimEventDate", "decimalLatitude","decimalLongitude")]
shearwaters <- shearwaters |>
separate_rows(organismID, sep=";") |>
mutate(date = as.POSIXct(verbatimEventDate))
shearwaters <- shearwaters |>
mutate(x=1.01 * cos(degrees2radians(decimalLongitude)) * cos(degrees2radians(decimalLatitude))) |>
mutate(y=1.01 * sin(degrees2radians(decimalLongitude)) * cos(degrees2radians(decimalLatitude))) |>
mutate(z=1.01 * sin(degrees2radians(decimalLatitude)))
time_range <- seq(
from = as.Date(min(shearwaters$date)),
to = as.Date(max(shearwaters$date)),
by = "day"
)
animals <- unique(shearwaters$organismID)
full_times <- expand.grid(Animal = animals, Time = time_range)
shearwaters_full <- full_times |>
left_join(shearwaters, by = c("Animal" = "organismID"))|>
group_by(Animal, Time) |>
filter(abs(difftime(Time, date, units = "secs")) == min(abs(difftime(Time, date, units = "secs")))) |>
filter(abs(difftime(Time, date, units = "days")) < 1) |>
ungroup() |>
select(Animal, Time, date, decimalLatitude, decimalLongitude, x, y, z) |>
group_by(Time) |>
filter(n() > 3) |>
filter(Time >= as.Date("2010-01-01"))
shearwaters_full$Time <- as.character(shearwaters_full$Time)
first_appearances <- shearwaters_full |>
group_by(Animal) |>
summarize(
firstLat=first(decimalLatitude),
firstLon=first(decimalLongitude)
)
shearwaters_full <- left_join(shearwaters_full, first_appearances, by=join_by('Animal'=='Animal'))
View(full_times)
View(shearwaters_full)
?accumulate
shearwaters_full <- full_times |>
left_join(shearwaters, by = c("Animal" = "organismID"))|>
group_by(Animal, Time) |>
filter(abs(difftime(Time, date, units = "secs")) == min(abs(difftime(Time, date, units = "secs")))) |>
filter(abs(difftime(Time, date, units = "days")) < 1) |>
ungroup() |>
select(Animal, Time, date, decimalLatitude, decimalLongitude, x, y, z) |>
group_by(Time) |>
filter(n() > 3) |>
filter(Time >= as.Date("2010-01-01")) |>
st_as_sf(coords=c("decimalLongitude","decimalLatitude")) |>
st_set_crs(4326)
View(shearwaters_full)
install.packages('purr')
install.packages('purrr')
install.packages("purrr")
shearwaters_full <- full_times |>
left_join(shearwaters, by = c("Animal" = "organismID"))|>
group_by(Animal, Time) |>
filter(abs(difftime(Time, date, units = "secs")) == min(abs(difftime(Time, date, units = "secs")))) |>
filter(abs(difftime(Time, date, units = "days")) < 1) |>
ungroup() |>
select(Animal, Time, date, decimalLatitude, decimalLongitude, x, y, z) |>
group_by(Time) |>
filter(n() > 3) |>
filter(Time >= as.Date("2010-01-01")) |>
st_as_sf(coords=c("decimalLongitude","decimalLatitude")) |>
purrr::accumulate(geometry, c) |>
st_set_crs(4326)
shearwaters_full <- full_times |>
left_join(shearwaters, by = c("Animal" = "organismID"))|>
group_by(Animal, Time) |>
filter(abs(difftime(Time, date, units = "secs")) == min(abs(difftime(Time, date, units = "secs")))) |>
filter(abs(difftime(Time, date, units = "days")) < 1) |>
ungroup() |>
select(Animal, Time, date, decimalLatitude, decimalLongitude, x, y, z) |>
group_by(Time) |>
filter(n() > 3) |>
filter(Time >= as.Date("2010-01-01")) |>
st_as_sf(coords=c("decimalLongitude","decimalLatitude")) |>
st_set_crs(4326) |>
purrr::accumulate(geometry, c)
shearwaters_full <- full_times |>
left_join(shearwaters, by = c("Animal" = "organismID"))|>
group_by(Animal, Time) |>
filter(abs(difftime(Time, date, units = "secs")) == min(abs(difftime(Time, date, units = "secs")))) |>
filter(abs(difftime(Time, date, units = "days")) < 1) |>
ungroup() |>
select(Animal, Time, date, decimalLatitude, decimalLongitude, x, y, z) |>
group_by(Time) |>
filter(n() > 3) |>
filter(Time >= as.Date("2010-01-01")) |>
st_as_sf(coords=c("decimalLongitude","decimalLatitude")) |>
st_set_crs(4326) |>
mutate(points = purrr::accumulate(geometry, c))
shearwaters_full <- full_times |>
left_join(shearwaters, by = c("Animal" = "organismID"))|>
group_by(Animal, Time) |>
filter(abs(difftime(Time, date, units = "secs")) == min(abs(difftime(Time, date, units = "secs")))) |>
filter(abs(difftime(Time, date, units = "days")) < 1) |>
ungroup() |>
select(Animal, Time, date, decimalLatitude, decimalLongitude, x, y, z) |>
group_by(Time) |>
filter(n() > 3) |>
filter(Time >= as.Date("2010-01-01")) |>
st_as_sf(coords=c("decimalLongitude","decimalLatitude")) |>
st_set_crs(4326) |>
group_by(Animal) |>
mutate(points = purrr::accumulate(geometry, c))
shearwaters_full <- full_times |>
left_join(shearwaters, by = c("Animal" = "organismID"))|>
group_by(Animal, Time) |>
filter(abs(difftime(Time, date, units = "secs")) == min(abs(difftime(Time, date, units = "secs")))) |>
filter(abs(difftime(Time, date, units = "days")) < 1) |>
ungroup() |>
select(Animal, Time, date, decimalLatitude, decimalLongitude, x, y, z) |>
group_by(Time) |>
filter(n() > 3) |>
filter(Time >= as.Date("2010-01-01")) |>
st_as_sf(coords=c("decimalLongitude","decimalLatitude")) |>
st_set_crs(4326) |>
ungroup() |>
group_by(Animal) |>
mutate(points = purrr::accumulate(geometry, c))
?st_cast
shearwaters_full <- full_times |>
left_join(shearwaters, by = c("Animal" = "organismID"))|>
group_by(Animal, Time) |>
filter(abs(difftime(Time, date, units = "secs")) == min(abs(difftime(Time, date, units = "secs")))) |>
filter(abs(difftime(Time, date, units = "days")) < 1) |>
ungroup() |>
select(Animal, Time, date, decimalLatitude, decimalLongitude, x, y, z) |>
group_by(Time) |>
filter(n() > 3) |>
filter(Time >= as.Date("2010-01-01")) |>
st_as_sf(coords=c("decimalLongitude","decimalLatitude")) |>
st_set_crs(4326) |>
ungroup() |>
group_by(Animal) |>
mutate(points = purrr::accumulate(geometry, c)) |>
st_cast(points, "LINESTRING")
pts_sf <- data.frame(
x = seq(47, 48, by=0.1),
y = seq(147, 148, by=0.1),
attr_data = rnorm(11,42,42),
id = c(rep("fred",6), rep("wilma",5))
) %>%
sf::st_as_sf(coords = c("x","y")) %>%
sf::st_set_crs(4326)
View(pts_sf)
pts_sf %>% group_by(id) %>% summarize() %>% st_cast("LINESTRING")
test <- pts_sf %>% group_by(id) %>% summarize() %>% st_cast("LINESTRING")
View(test)
test <- pts_sf %>% group_by(id) %>% summarize()
View(test)
pts_sf <- data.frame(
x = seq(47, 48, by=0.1),
y = seq(147, 148, by=0.1),
attr_data = rnorm(11,42,42),
id = c(rep("fred",6), rep("wilma",5))
) %>%
sf::st_as_sf(coords = c("x","y")) %>%
sf::st_set_crs(4326)
shearwaters_full <- full_times |>
left_join(shearwaters, by = c("Animal" = "organismID"))|>
group_by(Animal, Time) |>
filter(abs(difftime(Time, date, units = "secs")) == min(abs(difftime(Time, date, units = "secs")))) |>
filter(abs(difftime(Time, date, units = "days")) < 1) |>
ungroup() |>
select(Animal, Time, date, decimalLatitude, decimalLongitude, x, y, z) |>
group_by(Time) |>
filter(n() > 3) |>
filter(Time >= as.Date("2010-01-01")) |>
st_as_sf(coords=c("decimalLongitude","decimalLatitude")) |>
st_set_crs(4326) |>
ungroup() |>
group_by(Animal) |>
mutate(points = purrr::accumulate2(geometry, c)) |>
st_cast(points, "LINESTRING")
?accumulate
shearwaters_full <- full_times |>
left_join(shearwaters, by = c("Animal" = "organismID"))|>
group_by(Animal, Time) |>
filter(abs(difftime(Time, date, units = "secs")) == min(abs(difftime(Time, date, units = "secs")))) |>
filter(abs(difftime(Time, date, units = "days")) < 1) |>
ungroup() |>
select(Animal, Time, date, decimalLatitude, decimalLongitude, x, y, z) |>
group_by(Time) |>
filter(n() > 3) |>
filter(Time >= as.Date("2010-01-01")) |>
st_as_sf(coords=c("decimalLongitude","decimalLatitude")) |>
st_set_crs(4326) |>
ungroup() |>
group_by(Animal) |>
mutate(points = purrr::accumulate2(geometry, c, .ptype = POINT)) |>
st_cast(points, "LINESTRING")
shearwaters_full <- full_times |>
left_join(shearwaters, by = c("Animal" = "organismID"))|>
group_by(Animal, Time) |>
filter(abs(difftime(Time, date, units = "secs")) == min(abs(difftime(Time, date, units = "secs")))) |>
filter(abs(difftime(Time, date, units = "days")) < 1) |>
ungroup() |>
select(Animal, Time, date, decimalLatitude, decimalLongitude, x, y, z) |>
group_by(Time) |>
filter(n() > 3) |>
filter(Time >= as.Date("2010-01-01")) |>
st_as_sf(coords=c("decimalLongitude","decimalLatitude")) |>
st_set_crs(4326) |>
ungroup() |>
group_by(Animal) |>
mutate(points = purrr::accumulate(geometry, c, .ptype = POINT)) |>
st_cast(points, "LINESTRING")
shearwaters_full <- full_times |>
left_join(shearwaters, by = c("Animal" = "organismID"))|>
group_by(Animal, Time) |>
filter(abs(difftime(Time, date, units = "secs")) == min(abs(difftime(Time, date, units = "secs")))) |>
filter(abs(difftime(Time, date, units = "days")) < 1) |>
ungroup() |>
select(Animal, Time, date, decimalLatitude, decimalLongitude, x, y, z) |>
group_by(Time) |>
filter(n() > 3) |>
filter(Time >= as.Date("2010-01-01")) |>
st_as_sf(coords=c("decimalLongitude","decimalLatitude")) |>
st_set_crs(4326) |>
ungroup() |>
group_by(Animal) |>
mutate(points = purrr::accumulate(geometry, c, .ptype = point)) |>
st_cast(points, "LINESTRING")
shearwaters_full <- full_times |>
left_join(shearwaters, by = c("Animal" = "organismID"))|>
group_by(Animal, Time) |>
filter(abs(difftime(Time, date, units = "secs")) == min(abs(difftime(Time, date, units = "secs")))) |>
filter(abs(difftime(Time, date, units = "days")) < 1) |>
ungroup() |>
select(Animal, Time, date, decimalLatitude, decimalLongitude, x, y, z) |>
group_by(Time) |>
filter(n() > 3) |>
filter(Time >= as.Date("2010-01-01")) |>
st_as_sf(coords=c("decimalLongitude","decimalLatitude")) |>
st_set_crs(4326) |>
ungroup() |>
group_by(Animal) |>
mutate(points = purrr::accumulate(geometry, c, .ptype = double)) |>
st_cast(points, "LINESTRING")
shearwaters_full <- full_times |>
left_join(shearwaters, by = c("Animal" = "organismID"))|>
group_by(Animal, Time) |>
filter(abs(difftime(Time, date, units = "secs")) == min(abs(difftime(Time, date, units = "secs")))) |>
filter(abs(difftime(Time, date, units = "days")) < 1) |>
ungroup() |>
select(Animal, Time, date, decimalLatitude, decimalLongitude, x, y, z) |>
group_by(Time) |>
filter(n() > 3) |>
filter(Time >= as.Date("2010-01-01")) |>
st_as_sf(coords=c("decimalLongitude","decimalLatitude")) |>
st_set_crs(4326) |>
ungroup() |>
group_by(Animal) |>
mutate(points = purrr::accumulate(geometry, c, .ptype = double))
class(shearwaters_full$points)
class(shearwaters_full$geometry)
class(shearwaters_full$geometry[1])
class(shearwaters_full$points[1])
class(shearwaters_full$points[2])
shearwaters_full$points[2]
shearwaters_full$points[15]
View(test)
shearwaters_full$points[15][1]
shearwaters_full$points[15][10]
shearwaters_full$points[15][1][1]
shearwaters_full$points[15]
class(shearwaters_full$points[15])
shearwaters_full$points[15][1][1][1][1][1][1]
