arrange(desc(volume)) |>
slice_head(n=5)
View(txhousing_data)
animation <- ggplot(txhousing_data)+
geom_text_wordcloud(aes(label=city, size=volume))+
scale_size_area(max_size = 30)
animation
animation <- ggplot(txhousing_data)+
geom_text_wordcloud(aes(label=city, size=volume))+
scale_size_area(max_size = 30)+
transition_time(date)
animation <- ggplot(txhousing_data)+
geom_text_wordcloud(aes(label=city, size=volume))+
scale_size_area(max_size = 30)+
transition_time(date)
animation <- ggplot(txhousing_data)+
geom_text_wordcloud(aes(label=city, size=volume, group=city))+
scale_size_area(max_size = 30)+
transition_time(date)
animation
?scale_size_area
animation <- ggplot(txhousing_data)+
geom_text_wordcloud(aes(label=city, size=volume, group=city))+
scale_size_area(max_size = 30)+
transition_time(date)+
labs(title="Texas Cities With The Most Money Spent in Real Estate",
subtitle="Since 2000, the top five real estate spenders have remained the same, <br>with Houston and Dallas being significantly ahead of the rest.<br><br>{as.integer(frame_time)}")+
theme_minimal()+
theme(plot.title = ggtext::element_markdown(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = ggtext::element_markdown(size = 15, hjust =0.5, face = "bold"))+
transition_time(date)
animate(animation, fps=3, duration=35, end_pause=9, height = 8,
width = 8, units = "in", res = 200)
animation <- ggplot(txhousing_data)+
geom_text_wordcloud(aes(label=city, size=volume, group=city))+
scale_size_area(max_size = 30)+
transition_time(date)+
labs(title="Texas Cities With The Most Money Spent in Real Estate",
subtitle="Since 2000, the top five real estate spenders have remained the same, <br>with Houston and Dallas being significantly ahead of the rest.<br><br>{as.integer(frame_time)}",
caption="Nikhil Chinchalkar for Princeton University | TXHousing | 2024")+
theme_minimal()+
theme(plot.title = ggtext::element_markdown(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = ggtext::element_markdown(size = 15, hjust =0.5, face = "bold"))+
transition_time(date)
animate(animation, fps=3, duration=35, end_pause=9, height = 8,
width = 8, units = "in", res = 200)
library(ggplot2)
library(maps)
library(sf)
library(dplyr)
library(gganimate)
library(tidygeocoder)
usa <- st_as_sf(map("state", fill=TRUE))
library(ggplot2)
library(maps)
library(sf)
library(dplyr)
library(gganimate)
library(tidygeocoder)
usa <- st_as_sf(map("state", fill=TRUE))
usa <- st_as_sf(map("state", fill=TRUE))
txhousing_data <- txhousing
library(ggplot2)
library(maps)
library(sf)
library(dplyr)
library(gganimate)
library(tidygeocoder)
usa <- st_as_sf(map("state", fill=TRUE))
usa <- st_as_sf(maps::map("state", fill=TRUE))
usa <- st_as_sf(maps::map("state", fill=TRUE))
usa <- st_as_sf(sf ::map("state", fill=TRUE))
maps
usa <- st_as_sf(maps::map("state", fill=TRUE))
library(rnaturalearthdata)
usa <- st_as_sf(map("state", fill=TRUE))
usa <- st_as_sf(maps::map("state", fill=TRUE))
usa <- st_as_sf(maps::map("state", fill=TRUE, plot=FALSE))
View(usa)
txhousing_data <- txhousing
cities <- data.frame(unique(txhousing_data$city))
names(cities)[names(cities) == 'unique.txhousing_data.city.'] <- 'city'
cities$lat <- geo_osm(cities$city)$lat
library(ggplot2)
library(maps)
library(sf)
library(dplyr)
library(gganimate)
library(tidygeocoder)
usa <- st_as_sf(maps::map("state", fill=TRUE, plot=FALSE))
txhousing_data <- txhousing
cities <- data.frame(unique(txhousing_data$city))
names(cities)[names(cities) == 'unique.txhousing_data.city.'] <- 'city'
cities$lat <- geo_osm(cities$city)$lat
cities$long <- geo_osm(cities$city)$long
cities[cities$city == "Victoria",] = c('Victoria', 28.80, -97.00)
cities[cities$city == "Temple-Belton",] = c('Temple-Belton', 31.09, -97.34)
cities[cities$city == "Paris",] = c('Paris', 33.66, -95.55)
cities[cities$city == "Odessa",] = c('Odessa', 31.84, -102.36)
cities[cities$city == "Bay Area",] = c('Bay Area', 29.57, -95.15)
cities[cities$city == "Longview-Marshall",] = c('Longview-Marshall', 32.51, -94.73)
txhousing_data <- left_join(txhousing_data, cities)
sf_txhousing_data <- txhousing_data |>
st_as_sf(coords = c('long','lat')) |>
st_set_crs(4326)
animation <- ggplot()+
geom_sf(data=usa)+
geom_sf(data=sf_txhousing_data, aes(size=listings), shape=1, color="gray")+
geom_sf(data=sf_txhousing_data, aes(size=sales, color=median))+
viridis::scale_color_viridis(option="B", label=scales::comma)+
scale_size_continuous(label=scales::comma, range = c(1,15))+
theme_void()+
labs(title="Texas Housing Data from 2000-2015",
subtitle="The outer circle is how many houses were listed.<br>The inner circle is how many houses were sold and for what price.
<br><br>Year: {as.integer(frame_time)}<br>",
color="Median Sale Price",
size="Number of Listings/Sales")+
theme(plot.title = ggtext::element_markdown(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = ggtext::element_markdown(size = 15, hjust =0.5, face = "bold"))+
coord_sf(xlim = c(-107, -90), ylim = c(25, 37))+
transition_time(date)
animate(animation, fps=10, duration=15, end_pause=30, height = 8,
width = 9, units = "in", res = 200)
animation <- ggplot(txhousing_data)+
geom_text_wordcloud(aes(label=city, size=volume, group=city))+
scale_size_area(max_size = 30)+
transition_time(date)+
labs(title="Texas Cities With The Most Money Spent in Real Estate",
subtitle="Since 2000, the top five real estate spenders have remained the same, <br>with Houston and Dallas being significantly ahead of the rest.<br><br>{as.integer(frame_time)}",
caption="Nikhil Chinchalkar for Princeton University | TXHousing | 2024")+
theme_minimal()+
theme(plot.title = ggtext::element_markdown(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = ggtext::element_markdown(size = 15, hjust =0.5, face = "bold"))+
transition_time(date)
animate(animation, fps=3, duration=35, end_pause=9, height = 8,
width = 8, units = "in", res = 200)
library(ggplot2)
library(dplyr)
library(ggwordcloud)
library(gganimate)
txhousing_data <- txhousing
txhousing_data <- txhousing_data |>
group_by(date) |>
arrange(desc(volume)) |>
slice_head(n=5)
set.seed(52)
animation <- ggplot(txhousing_data)+
geom_text_wordcloud(aes(label=city, size=volume, group=city))+
scale_size_area(max_size = 30)+
transition_time(date)+
labs(title="Texas Cities With The Most Money Spent in Real Estate",
subtitle="Since 2000, the top five real estate spenders have remained the same, <br>with Houston and Dallas being significantly ahead of the rest.<br><br>{as.integer(frame_time)}",
caption="Nikhil Chinchalkar for Princeton University | TXHousing | 2024")+
theme_minimal()+
theme(plot.title = ggtext::element_markdown(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = ggtext::element_markdown(size = 15, hjust =0.5, face = "bold"))+
transition_time(date)
animate(animation, fps=3, duration=35, end_pause=9, height = 8,
width = 8, units = "in", res = 200)
txhousing_data <- txhousing
txhousing_data <- left_join(txhousing_data, cities)
txhousing_data <- left_join(txhousing_data, cities)
txhousing_data <- left_join(txhousing_data, cities)
txhousing_data <- txhousing
txhousing_data <- left_join(txhousing_data, cities)
sf_txhousing_data <- txhousing_data |>
st_as_sf(coords = c('long','lat')) |>
st_set_crs(4326)
animation <- ggplot()+
geom_sf(data=usa)+
geom_sf(data=sf_txhousing_data, aes(size=listings), shape=1, color="gray")+
geom_sf(data=sf_txhousing_data, aes(size=sales, color=median))+
viridis::scale_color_viridis(option="B", label=scales::comma)+
scale_size_continuous(label=scales::comma, range = c(1,15))+
theme_void()+
labs(title="Texas Housing Data from 2000-2015",
subtitle="The outer circle is how many houses were listed.<br>The inner circle is how many houses were sold and for what price.
<br><br>Year: {as.integer(frame_time)}<br>",
caption="Nikhil Chinchalkar for Princeton University | TXHousing | 2024",
color="Median Sale Price",
size="Number of Listings/Sales")+
theme(plot.title = ggtext::element_markdown(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = ggtext::element_markdown(size = 15, hjust =0.5, face = "bold"))+
coord_sf(xlim = c(-107, -90), ylim = c(25, 37))+
transition_time(date)
animate(animation, fps=10, duration=15, end_pause=30, height = 8,
width = 9, units = "in", res = 200)
library(ggplot2)
library(sf)
library(dplyr)
library(gganimate)
library(tidygeocoder)
usa <- st_as_sf(maps::map("state", fill=TRUE, plot=FALSE))
txhousing_data <- txhousing
cities <- data.frame(unique(txhousing_data$city))
names(cities)[names(cities) == 'unique.txhousing_data.city.'] <- 'city'
cities$lat <- geo_osm(cities$city)$lat
cities$long <- geo_osm(cities$city)$long
cities[cities$city == "Victoria",] = c('Victoria', 28.80, -97.00)
cities[cities$city == "Temple-Belton",] = c('Temple-Belton', 31.09, -97.34)
cities[cities$city == "Paris",] = c('Paris', 33.66, -95.55)
cities[cities$city == "Odessa",] = c('Odessa', 31.84, -102.36)
cities[cities$city == "Bay Area",] = c('Bay Area', 29.57, -95.15)
cities[cities$city == "Longview-Marshall",] = c('Longview-Marshall', 32.51, -94.73)
txhousing_data <- left_join(txhousing_data, cities)
sf_txhousing_data <- txhousing_data |>
st_as_sf(coords = c('long','lat')) |>
st_set_crs(4326)
animation <- ggplot()+
geom_sf(data=usa)+
geom_sf(data=sf_txhousing_data, aes(size=listings), shape=1, color="gray")+
geom_sf(data=sf_txhousing_data, aes(size=sales, color=median))+
viridis::scale_color_viridis(option="B", label=scales::comma)+
scale_size_continuous(label=scales::comma, range = c(1,15))+
theme_void()+
labs(title="Texas Housing Data from 2000-2015",
subtitle="The outer circle is how many houses were listed.<br>The inner circle is how many houses were sold and for what price.
<br><br>Year: {as.integer(frame_time)}<br>",
caption="Nikhil Chinchalkar for Princeton University | TXHousing | 2024",
color="Median Sale Price",
size="Number of Listings/Sales")+
theme(plot.title = ggtext::element_markdown(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = ggtext::element_markdown(size = 15, hjust =0.5, face = "bold"))+
coord_sf(xlim = c(-107, -90), ylim = c(25, 37))+
transition_time(date)
animate(animation, fps=10, duration=15, end_pause=30, height = 8,
width = 9, units = "in", res = 200)
class(maps::map("state"))
class(maps::map("state", plot=FALSE))
class(usa)
?maps
??maps
usa <- st_as_sf(maps::map("state", regions="texas",fill=TRUE, plot=FALSE))
View(usa)
usa <- st_as_sf(maps::map("state", regions="south",fill=TRUE, plot=FALSE))
View(usa)
usa <- st_as_sf(maps::map("state",fill=TRUE, plot=FALSE))
usa <- st_as_sf(maps::map("usa",fill=TRUE, plot=FALSE))
View(usa)
usa <- st_as_sf(maps::map("county",fill=TRUE, plot=FALSE))
View(usa)
usa <- st_as_sf(maps::map("state",fill=TRUE, plot=FALSE))
View(usa)
geo_osm('12 Scott Avenue')
test <- data.frame(c(1,2,3,4,5))
View(test)
test$c.1..2..3..4..5. <- geo_osm('12 Scott Av')
View(cities)
cities <- data.frame(unique(txhousing_data$city))
names(cities)[names(cities) == 'unique.txhousing_data.city.'] <- 'city'
View(cities)
cities$lat <- geo_osm(cities$city)$lat
cities$long <- geo_osm(cities$city)$long
View(cities)
cities$lat <- geo_osm(paste0(cities$city, ", Texas"))$lat
cities$long <- geo_osm(paste0(cities$city, ", Texas"))$long
View(cities)
ggplot()+geom_sf(data=usa)+geom_sf(data=cities)
txhousing_data <- left_join(txhousing_data, cities)
rm(test)
View(usa)
View(cities)
View(txhousing_data)
txhousing_data <- left_join(txhousing_data, cities)
usa <- st_as_sf(maps::map("state",fill=TRUE, plot=FALSE))
txhousing_data <- txhousing
txhousing_data <- left_join(txhousing_data, cities)
sf_txhousing_data <- txhousing_data |>
st_as_sf(coords = c('long','lat')) |>
st_set_crs(4326)
sf_txhousing_data <- txhousing_data |>
st_as_sf(coords = c('long','lat')) |>
st_set_crs(4326)
sf_txhousing_data <- txhousing_data |>
filter(!is.na(long)) |>
filter(!is.na(lat)) |>
st_as_sf(coords = c('long','lat')) |>
st_set_crs(4326)
animation <- ggplot()+
geom_sf(data=usa)+
geom_sf(data=sf_txhousing_data, aes(size=listings), shape=1, color="gray")+
geom_sf(data=sf_txhousing_data, aes(size=sales, color=median))+
viridis::scale_color_viridis(option="B", label=scales::comma)+
scale_size_continuous(label=scales::comma, range = c(1,15))+
theme_void()+
labs(title="Texas Housing Data from 2000-2015",
subtitle="The outer circle is how many houses were listed.<br>The inner circle is how many houses were sold and for what price.
<br><br>Year: {as.integer(frame_time)}<br>",
caption="Nikhil Chinchalkar for Princeton University | TXHousing | 2024",
color="Median Sale Price",
size="Number of Listings/Sales")+
theme(plot.title = ggtext::element_markdown(size = 22, hjust =0.5, face = "bold"),
plot.subtitle = ggtext::element_markdown(size = 15, hjust =0.5, face = "bold"))+
coord_sf(xlim = c(-107, -90), ylim = c(25, 37))+
transition_time(date)
animate(animation, fps=10, duration=15, end_pause=30, height = 8,
width = 9, units = "in", res = 200)
View(txhousing_data)
txhousing_data <- txhousing
txhousing_data <- left_join(txhousing_data, cities)
View(txhousing_data)
sf_txhousing_data <- txhousing_data |>
filter(!is.na(long)) |>
filter(!is.na(lat)) |>
st_as_sf(coords = c('long','lat')) |>
st_set_crs(4326)
View(txhousing_data)
View(sf_txhousing_data)
animation <- ggplot()+
geom_sf(data=usa)+
geom_sf(data=sf_txhousing_data, aes(size=listings), shape=1, color="gray")+
geom_sf(data=sf_txhousing_data, aes(size=sales, color=median))
animation
animation <- ggplot()+
geom_sf(data=usa)+
geom_sf(data=sf_txhousing_data, aes(size=listings), shape=1, color="gray")+
geom_sf(data=sf_txhousing_data, aes(size=sales, color=median))
animtion
animation
animation <- ggplot()+
geom_sf(data=usa)+
geom_sf(data=sf_txhousing_data, aes(size=listings), shape=1, color="gray")+
geom_sf(data=sf_txhousing_data, aes(size=sales, color=median))+
viridis::scale_color_viridis(option="B", label=scales::comma)
animation
dev.off()
animation <- ggplot()+
geom_sf(data=usa)+
geom_sf(data=sf_txhousing_data, aes(size=listings), shape=1, color="gray")+
geom_sf(data=sf_txhousing_data, aes(size=sales, color=median))+
viridis::scale_color_viridis(option="B", label=scales::comma)
animation
read.csv("/Users/nc7172/Downloads/Hyperlocal_Temperature_Monitoring_20240701.csv")
temps <- read.csv("/Users/nc7172/Downloads/Hyperlocal_Temperature_Monitoring_20240701.csv")
temps <- read.csv("/Users/nc7172/Downloads/Hyperlocal_Temperature_Monitoring_20240701.csv")
View(temps)
temps <- temps |>
group_by(Sensor.ID) |>
summarize(Latitude = Latitude,
Longitude = Longitude,
AirTemp = mean(AirTemp))
libary(dplyr)
library(dplyr)
temps <- temps |>
group_by(Sensor.ID) |>
summarize(Latitude = Latitude,
Longitude = Longitude,
AirTemp = mean(AirTemp))
View(temps)
temps <- temps |>
group_by(Sensor.ID) |>
summarize(Latitude = first(Latitude),
Longitude = first(Longitude),
AirTemp = mean(AirTemp))
View(temps)
temps <- read.csv("/Users/nc7172/Downloads/Hyperlocal_Temperature_Monitoring_20240701.csv")
library(dplyr)
final_temps <- temps |>
group_by(Sensor.ID) |>
summarize(Latitude = first(Latitude),
Longitude = first(Longitude),
AirTemp = mean(AirTemp))
View(temps)
View(final_temps)
write.csv("tree_temperatures.csv", final_temps)
?write.csv
write.csv(file="tree_temperatures.csv", x=final_temps)
write.csv(file="/Users/nc7172/Downloads/tree_temperatures.csv", x=final_temps)
temps <- read.csv("/Users/nc7172/Downloads/Hyperlocal_Temperature_Monitoring_20240702.csv")
View(temps)
library(dplyr)
final_temps <- temps |>
filter(Latitude >= 40.69938) |>
filter(Latitude <= 40.76442) |>
filter(Longitude >= -74.02279) |>
filter(Longitude <= -73.96305) |>
group_by(Sensor.ID) |>
summarize(Latitude = first(Latitude),
Longitude = first(Longitude),
AirTemp = mean(AirTemp))
View(temps)
View(final_temps)
View(temps)
final_temps <- temps |>
#filter(Latitude >= 40.69938) |>
#filter(Latitude <= 40.76442) |>
#filter(Longitude >= -74.02279) |>
#filter(Longitude <= -73.96305) |>
group_by(Sensor.ID) |>
summarize(Latitude = first(Latitude),
Longitude = first(Longitude),
AirTemp = mean(AirTemp))
View(final_temps)
write.csv(file="/Users/nc7172/Downloads/tree_temperatures.csv", x=final_temps)
library(plotly)
library(tidyverse)
library(dplyr)
library(stars)
earthquakes <- read_csv("earthquakes.csv")
setwd("~/Documents/GitHub/animations/advanced_animations/maps/3d_static")
library(plotly)
library(tidyverse)
library(dplyr)
library(stars)
earthquakes <- read_csv("earthquakes.csv")
degrees2radians <- function(degree) degree * pi / 180
earthquakes <- earthquakes |>
mutate(x=1.01 * cos(degrees2radians(longitude)) * cos(degrees2radians(latitude))) |>
mutate(y=1.01 * sin(degrees2radians(longitude)) * cos(degrees2radians(latitude))) |>
mutate(z=1.01 * sin(degrees2radians(latitude)))
manual_colorscale <- list(c(0,0.2,0.4,0.6,0.8,1),
c("white","#ffa590","#ff8164", "#ff6242","#fb4b1e","#c61a09"))
x_size <- 1000
y_size <- 500
raw_tif <- read_stars("surface.png",RasterIO = list(nBufXSize=x_size,nBufYSize=y_size))
rgb <- as.data.frame(raw_tif) |>
tidyr::pivot_wider(names_from = band, values_from = surface.png)
colnames(rgb)[3] <- "red"
colnames(rgb)[4] <- "green"
colnames(rgb)[5] <- "blue"
rgb$color <- rgb(rgb$red/255,rgb$green/255,rgb$blue/255)
rgb$color_int <- 256 * 256 * rgb$red + rgb$green * 256 + rgb$blue
rgb_earth <- matrix(data=rgb$color_int, nrow=y_size, ncol = x_size, byrow=TRUE)
lat <- seq(-90, 90, length.out = y_size)
lon <- seq(-180, 180, length.out = x_size)
lat <- matrix(rep(lat, x_size), nrow = y_size)
lon <- matrix(rep(lon, each = y_size), nrow = y_size)
earth_colorscale <- distinct(data.frame(rgb$color_int, rgb$color))
earth_colorscale <- earth_colorscale |> arrange(rgb.color_int)
while(nrow(earth_colorscale) > 255){
toDelete <- seq(0, nrow(earth_colorscale), 2)
earth_colorscale <- earth_colorscale[toDelete, ]
rownames(earth_colorscale) = NULL
}
earth_colorscale$breaks <- seq(1:nrow(earth_colorscale))/nrow(earth_colorscale)
earth_colorscale$breaks[1] = 0
earth_colorscale <- earth_colorscale[,c(3,2)]
names(earth_colorscale)[names(earth_colorscale) == 'rgb.color'] <- 'colors'
empty_axis <- list(
showgrid = FALSE,
zeroline = FALSE,
showticklabels = FALSE,
showspikes = FALSE,
spikesides = FALSE,
title = ""
)
image <- RCurl::base64Encode(readBin("size_scale.png", "raw", file.info("size_scale.png")[1, "size"]), "txt")
globe <- plot_ly(width=800,height=800) |>
add_sf(
data = sf::st_as_sf(maps::map("world", plot = FALSE, fill = TRUE)),
x = ~ 1.001 * cos(degrees2radians(x)) * cos(degrees2radians(y)),
y = ~ 1.001 * sin(degrees2radians(x)) * cos(degrees2radians(y)),
z = ~ 1.001 * sin(degrees2radians(y)),
color = I("black"), size = I(1),
hoverinfo = "none"
) |>
add_trace(
x=earthquakes$x,
y=earthquakes$y,
z=earthquakes$z,
mode = "markers", type = "scatter3d",
marker = list(color = earthquakes$magnitude, size = earthquakes$sig/100, colorscale = manual_colorscale, showscale=TRUE,
colorbar=list(title=list(text="Magnitude",side="top"), thickness=10, len=0.35, orientation='h', y=0.1,
tickfont=list(family="Arial"), nticks=6)),
text = paste0("Description: ", earthquakes$title, "<br>", "Time: ", earthquakes$date_time, "<br>" ,
"Magnitude: ", earthquakes$magnitude, "<br>", "Significance: ", earthquakes$sig),
hoverinfo = "text"
) |>
add_surface(
x = cos(degrees2radians(lon)) * cos(degrees2radians(lat)),
y = cos(degrees2radians(lat)) * sin(degrees2radians(lon)),
z = -sin(degrees2radians(lat)),
surfacecolor=rgb_earth,
colorscale=earth_colorscale,
showscale = FALSE,
hoverinfo = "none",
lightposition = list(
x=2,
y=2,
z=2
),
contours = list(
x = list(highlight = FALSE),
y = list(highlight = FALSE),
z = list(highlight = FALSE)
)
) |>
layout(
title=list(text="<br><b>Earthquakes Since 1995</b>",font=list(family="Arial", size=30)),
showlegend = FALSE,
annotations=list(text="Nikhil Chinchalkar For Princeton University | Seismic Research Dataset | 2024",
showarrow=FALSE, font=list(family="Arial", size=14), y=0),
images=list(list(source=paste('data:image/png;base64', image, sep=','),
xref="paper",
yref="paper",
x=0.5,
y=0.1,
sizex=.25,
sizey=.25,
xanchor="center",
yanchor="center")),
scene = list(
xaxis = empty_axis,
yaxis = empty_axis,
zaxis = empty_axis,
aspectratio = list(x = 1, y = 1, z = 1)
)
) |>
config(displayModeBar=FALSE)
globe
rgb <- as.data.frame(raw_tif) |>
tidyr::pivot_wider(names_from = band, values_from = surface.png)
